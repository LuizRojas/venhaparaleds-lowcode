services:
    appsmith:
        image: index.docker.io/appsmith/appsmith-ee
        container_name: appsmith
        ports:
            - "80:80"
            # - "443:443"
        volumes:
            - ./stacks:/appsmith-stacks    
        depends_on:
            - db
            - api_rest
        restart: unless-stopped
        networks:
            default:
            app_network:
    
    db:
        image: postgres:14-alpine
        container_name: postgres_db_appsmith
        environment:
            POSTGRES_DB: processo_seletivo_app
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: Anyplace5-Augmented3-Crop3
        extra_hosts:
            - "host.docker.internal:host-gateway"  # de acordo com a documentação é necessário para acesso ao datasource local
        volumes:
            - ./data/postgres:/var/lib/postgresql/data
        restart: always
        networks:
            default:
            app_network:
                ipv4_address: 172.20.0.10
    
    api_rest:
        build: ./api_rest
        container_name: processo_seletivo_api
        ports:
            - "5000:5000"
        environment:
            DB_HOST: db
            POSTGRES_DB: processo_seletivo_app
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: Anyplace5-Augmented3-Crop3
            DB_PORT: 5432
            # PYTHONPATH: /app
        depends_on:
            - db
        restart: unless-stopped
        networks:
            app_network:
                ipv4_address: 172.20.0.100
    
    sonarqube:
        image: sonarqube:lts-community # Versão LTS da comunidade
        container_name: sonarqube_server
        ports:
            - "9000:9000"
            - "9092:9092"
        environment:
            - SONARQUBE_JDBC_URL=jdbc:postgresql://sonar_db:5432/sonar
            - SONARQUBE_JDBC_USERNAME=sonar
            - SONARQUBE_JDBC_PASSWORD=sonar_password
            - SONAR_ES_JAVA_OPTS=-Xmx512m -Xms512m
        volumes:
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_logs:/opt/sonarqube/logs
        depends_on:
            - sonar_db
        networks:
            app_network:
        restart: unless-stopped

    sonar_db:
        image: postgres:13
        container_name: sonarqube_postgres_db
        environment:
            - POSTGRES_DB=sonar
            - POSTGRES_USER=sonar
            - POSTGRES_PASSWORD=sonar_password
        volumes:
            - sonar_db_data:/var/lib/postgresql/data
        networks:
            app_network:
        restart: unless-stopped

volumes: 
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_logs:
    sonar_db_data:    
    
networks:
    app_network:
        driver: bridge
        ipam:
            config:
              - subnet: 172.20.0.0/24
